// Demonstration of saving data to disk - using the platform portable format
// called "ASCII mode". Serialization functions are automatically 
// generated from the FORMAT statements which must be given for all classes.
// The same format is used for both the input/output serialization function,
// so these two functions are guaranteed to match. The FORMAT includes only
// declared int, float etc. class members. Data structure pointers and names
// declared through the NAME organization are stored automatically.
// This method is not as fast as the binary mode, but the data is portable
// - for example between VC++ under WinXP and g++ on Sun-Solaris.
// --------------------------------------------------------------------------
#define ZZmain // use exactly in one file of your program
#include "zzincl.h" // generated by zzprep
#include "testa.h"
int main(){ // the main() needs no change from the binary mode
    int i=10345; Library *lib; Author *aut; Book *bk; 
    void* v[1]; char* t[1]; // for saving to disk
    lib=new Library;

    aut=new Author("Booch"); authors.add(lib,aut);
    bk=new Book(i); books.add(aut,bk); i++;
    bk=new Book(i); books.add(aut,bk); i++;
    
    aut=new Author("Stroustrup"); authors.add(lib,aut);
    bk=new Book(i); books.add(aut,bk); i++;
    
    // save data to disk, 'lib' is the root of all the data
    v[0]=lib; t[0]="Library";
    util.save("myFile",1,v,t); // 1 root, type=Library
    if(util.error()) printf("error in saving to file 'myFile'\n");
    return 0;
}

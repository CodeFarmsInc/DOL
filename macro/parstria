/* =========================================================
.(l
 TEXT id;               /* id for the instance of the organization */
 str2Type *pp;   /* given pointer to a child */
 str1Type *par;  /* returned pointer to the parent */
.)l
Description:
 For a given pointer to the child element of the triangle, find
the parent (the top of the triangle).
 For the description of the 'triangle' structure, see also
ZZ_ADD_SINGLE_TRIANGLE().
 Internally this is a simple one pointer operation, but since the
pointers are transparent to the programmer, a special macro is needed.
.(l
Example:

typedef struct Country Country;
typedef struct Town Town;
struct Country{
    ZZ_EXT_Country
    int population;
    float sqMiles;
    char *name;
};
struct Town{
    ZZ_EXT_Town
    char river; /* yes or no */
    char color; /* color people hate most */
    char *contryName;
    char *townName;
};
ZZ_ORG_SINGLE_TRIANGLE(myTriangle,Country,Town)

Country *c;
Town *t;

/* let us assume that towns have been organized into triangles,
 * all towns under its country name. For a given town 't'
 * to find its country 'c', we do:

    ZZ_PARENT_SINGLE_TRIANGLE(myTriangle,t,c)
.)l
.sp 1
  ========================================================== */ 
#define ZZ_PARENT_SINGLE_TRIANGLE(id,pp,par) \
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */\
ZZZ_PARENT_SINGLE_TRIANGLE(ZZFP(ZZp,id),pp,par)

#define ZZZ_PARENT_SINGLE_TRIANGLE(parent,pp,par) {(par)=(pp)->parent;}

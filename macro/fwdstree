/* =========================================================
.(l
 TEXT id;               /* id for the instance of the organization */
 strType *obj;   /* given pointer to an object child */
 strType *next;  /* returned pointer to next object (sibling) */
.)l
Description:
 For a given object, find the next sibling.
 If only one object at this level of the tree, macro returns pointer
to the same object.
 Internally this is a simple one pointer operation, but since the
pointers are transparent to the programmer, a special macro is needed.
.(l
Example:

typedef struct Employee Employee;
struct Employee{
    ZZ_EXT_Employee
    char *name;
    char *manager;
    int salary;
};
ZZ_ORG_SINGLE_TREE(myTree,Employee)

Employee *c,*p;

ZZ_FORWARD_SINGLE_TREE(myTree,c,p)
.)l
.sp 1
  ========================================================== */ 
#define ZZ_FORWARD_SINGLE_TREE(id,obj,next) \
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */\
ZZZ_FORWARD_SINGLE_TREE(ZZFP(ZZs,id),obj,next)

#define ZZZ_FORWARD_SINGLE_TREE(sibling,obj,next) {(next)=(obj)->sibling;}

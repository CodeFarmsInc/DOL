<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR"
content="Microsoft FrontPage (Visual InterDev Edition) 2.0">
<title>Chapter 7, UML</title>
</head>

<body bgcolor="#FFFFFF" link="#487B59" vlink="#67B467"
alink="#804040">

<h1><font size="5" face="Arial">7. UML</font></h1>

<p>Programs coded with DOL have been UML driven (MDA=Model Driven Architecture)
since 1989, long before this term has been invented.
The ZZ_HYPER statements describe the connectivity of the UML class diagram
and have the role of <B> the textual form of the UML diagram.</B>

<p>On the other hand, every time you run the DOL code generator (zzprep), 
<B>a picture with the UML class diagram is automatically generated</B>.
In addition to the code with your customized data structures,
zzprep generates
file <I>layout.in</I>p with re-formatted
ZZ_HYPER statements and the description of the inheritance among your classes.
When you feed this file to the <I>layout</I>
program from the Code Farms' <I>incode</I> package, you get
a nicely layed-out UML diagram (file display.svg).
You can display this diagram with your Internet browser
or using one of the specialized svg display packages.
Program <I>layout</I> is not a part of the DOL, but
it is an OpenSource package which you can download free from 
<href A="http://www.codefarms.com"> http://www.codefarms.com </A>.

<p>The advantage of using the textual UML diagram 
is that the architecture of your software
is centrally controlled. The code and its UML diagram are integrated and
synchronized -- neither can be out of date. The graphical UML diagram
is available at all times, and if you want to edit it, you don't do it
in a graphical environment by shifting boxes and connecting them with 
lines. Instead, which is faster and safer, you edit the ZZ_HYPER statements
and the layout program takes the care of producing a neat looking diagram.

<p>Let's look at how this works with Example 1 from Chap.6. The data
structure (the architecture) there was described by the following
statements </p>

<blockquote>
    <p><em>ZZ_HYPER_SINGLE_COLLECT(inst,Chip,Instance);<br>
    ZZ_HYPER_SINGLE_COLLECT(nets,Chip,Net);<br>
    ZZ_HYPER_SINGLE_COLLECT(lib,Library,Master);<br>
    ZZ_HYPER_SINGLE_AGGREGATE(terms,Master,fTerm);<br>
    ZZ_HYPER_SINGLE_AGGREGATE(byInst,Instance,aTerm);<br>
    ZZ_HYPER_SINGLE_AGGREGATE(byNet,Net,aTerm);<br>
    ZZ_HYPER_SINGLE_COLLECT(pins,fTerm,fPin);<br>
    ZZ_HYPER_SINGLE_LINK(iLink,Instance,Master);<br>
    ZZ_HYPER_SINGLE_LINK(tLink,aTerm,fTerm); </em></p>
</blockquote>

<p>If we assume that these statements, together with the definitions
of all the participating classes, are in file <I>test.h</I>,
with the implementation in file <I>test.cpp</I>,
then the following little batch file runs the code generator (zzprep),
generates the UML diagram (call to layout), and compiles the program
using the line version of the VC++ compiler:</p>

<blockquote><pre>
    c:\orgc\zzprep test.h
    c:\incode\layout\layout -s param.txt layout.inp
    cl test.cpp d:\orgc\lib\mllib.lib
    REM the new UML diagram is in display.svg
</pre></blockquote>

<p> File param.txt is a little file which describes the size of your screen
and the proper size of the font for the UML diagram. This file can be either
automatically generated or manually coded -- for detailed description, see
the documentation for the <I>layout</I> package.

<p>When displayed with Internet Explorer, the file generated by this batch 
file (display.svg), produced the following diagram. Note that the quality
of the graphics deteriorated after reducing the size for this documentation:</p>
<p align="center"><img src="images/7_0.jpg" width="720" height="320"></p>

<p>Compare the UML diagram with the hand sketched diagram from Chap.6.
The UML diagram is cleaner and more meaningful while providing 
additional details.</p>
<p align="center"><img src="images/dol7_1.jpg" width="500" height="275"></p>



<p>&nbsp;</p>

<table border="0" cellpadding="2" width="100%">
    <tr>
        <td width="50%"><a href="ch06exmp.htm"><font face="Arial"><img
        src="images/prev.gif" border="0" width="21" height="19">
        Chapter 6: Examples Floppy or Tape</font></a></td>
        <td align="right" width="50%"><a href="ch08synt.htm"><font
        face="Arial">Chapter 8: Syntax<img
        src="images/next.gif" border="0" width="21" height="19"></font></a></td>
    </tr>
</table>
</body>
</html>
